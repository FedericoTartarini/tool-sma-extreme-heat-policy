name: CI Pipeline

on:
  push:
    branches: [development, main]

jobs:
  lint:
    name: 🧽 Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pipenv'

      - name: Build SMA
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      - name: Ruff Check
        run: pipenv run ruff check . --output-format=github

      - name: Ruff Format (verify)
        run: pipenv run ruff format --check .

  deploy:
    name: 🚀 Deploying
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set deployment environment variables
        id: set_vars
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "REPO_NAME=extreme-heat-tool" >> $GITHUB_ENV
            echo "IMG_NAME=main" >> $GITHUB_ENV
          else
            echo "REPO_NAME=extreme-heat-tool-test" >> $GITHUB_ENV
            echo "IMG_NAME=test" >> $GITHUB_ENV
          fi

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/987661761927/locations/global/workloadIdentityPools/github/providers/my-repo
          service_account: github-actions-deployer@sma-extreme-heat-policy.iam.gserviceaccount.com
          project_id: sma-extreme-heat-policy

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: sma-extreme-heat-policy

      - name: Building (🏗️) and Deploying (🚀)
        run: |
          gcloud builds submit \
            --project=sma-extreme-heat-policy \
            --substitutions=_REPO_NAME="${{ env.REPO_NAME }}",_PROJ_NAME="sma-extreme-heat-policy",_IMG_NAME="${{ env.IMG_NAME }}"

  test:
    name: 🧪 Testing with Playwright
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set deployment environment variables
        id: set_vars
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "BASE_URL=https://extreme-heat-tool-test-987661761927.asia-southeast1.run.app/" >> $GITHUB_ENV
          else
            echo "BASE_URL=https://sma-heat-policy.sydney.edu.au/" >> $GITHUB_ENV
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: "pipenv"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
          pipenv install playwright

      - name: Ensure browsers are installed
        run: pipenv run playwright install --with-deps

      - name: Run your playwright tests
        run: pipenv run pytest --base-url ${{ env.BASE_URL }}

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-traces
          path: test-results/
